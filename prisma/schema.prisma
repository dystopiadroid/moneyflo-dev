generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id         String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email      String       @unique
  name       String
  created_at DateTime     @default(now()) @db.Timestamp(0)
  updated_at DateTime     @default(now()) @updatedAt @db.Timestamp(0)
  currency   String       @default("INR")
  expenses   Expense[]
  income     Income[]
  investment Investment[]
}

model Expense {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title      String?
  amount     String   @default("0")
  category   String
  date       DateTime @db.Date
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @updatedAt @db.Timestamp(0)
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    String   @db.Uuid

  @@unique([user_id, date, title], name: "user_date_description_shouldBeUnique")
}

model Income {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title      String   @default("Salary")
  amount     String   @default("0")
  date       DateTime @db.Date
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @updatedAt @db.Timestamp(0)
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    String   @db.Uuid

  @@unique([user_id, date, title], name: "user_date_title_shouldBeUnique")
}

model Investment {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title      String   @default("Salary")
  amount     String   @default("0")
  category   String
  date       DateTime @db.Date
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @updatedAt @db.Timestamp(0)
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    String   @db.Uuid

  @@unique([user_id, date, title, category], name: "user_date_title_category_shouldBeUnique")
}
